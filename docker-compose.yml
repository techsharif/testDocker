# version: '3.9'

# services:
#   backend:
#     container_name: backend
#     build:
#       context: .
#       dockerfile: backend/Dockerfile
#     ports:
#       - "8000:8000"
    
#     volumes:
      
#       - ./backend:/blog
#     command: >
#       sh -c "python manage.py runserver 0.0.0.0:8000"
    
#     environment:
#       - DB_HOST=db
#       - DB_NAME=devdb
#       - DB_USER=devuser
#       - DB_PASS=changeme
#     depends_on:
#       - db

#   db:
#     image: postgres:13-alpine
#     volumes:
#       - dev-db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=devdb
#       - POSTGRES_USER=devuser
#       - POSTGRES_PASSWORD=changeme

  

#   frontend:
#     container_name: frontend
#     build:
#       context: .
#       dockerfile: frontend/Dockerfile
#     ports:
#       - "3000:3000"
#     volumes:
#       - node_modules:/frontend/node_modules
    

  

# volumes:
#   dev-db-data:
#   node_modules:
  


  




version: '3.9'

services:
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8000:8000"
    
    volumes:
      
      - ./backend:/blog
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme

  

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - node_modules:/frontend/node_modules

  nginx:
    build:
      context: ./nginx
    volumes:
      - static:/static
      - frontend:/var/www/frontend
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend

    

  

volumes:
  dev-db-data:
  node_modules:
  static:
  frontend: